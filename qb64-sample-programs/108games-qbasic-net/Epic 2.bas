DECLARE FUNCTION TYPE$ (A%)
DECLARE SUB WORD (PROMPT$, VAR$)
DECLARE SUB TBOX (TEXT$)
DECLARE FUNCTION EDITOR% ()
DECLARE SUB PRINTF (S AS STRING)
DECLARE SUB MILLIDELAY (msecs%)
DECLARE FUNCTION OPERATED% ()
DECLARE SUB RFIELD (Field$, Min%, Max%, Permitted$)
DECLARE FUNCTION SORT% (PERSON() AS STRING, SCORE%(), PERSON AS STRING, SCORE%, L%)
DECLARE SUB BOX (ROW1%, COL1%, ROW2%, COL2%)
DECLARE SUB MOVE (X%, Y%, N%, D%, O%)
DECLARE SUB MIDDLE (row%, TEXT$)
DECLARE SUB DISPLAY.GRAPHIC (X%, Y%, GRAPHIC%)
DECLARE SUB GETOBJECT (OBJECT%(), X%, Y%)
DEFINT A-Z
SCREEN 12
WIDTH 80, 60
OPTION BASE 1

'Graphics

DIM SHARED BGROUND: BGROUND = 0'32
CONST OBJECTS = 29

DIM MX(0 TO OBJECTS)
DIM MY(0 TO OBJECTS)

FOR A = 0 TO 28
MX(A) = 10: MY(A) = 10
NEXT A

DIM SHARED OBJECT0(MX(0) * MY(0))
DIM SHARED OBJECT1(MX(1) * MY(1))
DIM SHARED OBJECT2(MX(2) * MY(2))
DIM SHARED OBJECT3(MX(3) * MY(3))
DIM SHARED OBJECT4(MX(4) * MY(4))
DIM SHARED OBJECT5(MX(5) * MY(5))
DIM SHARED OBJECT6(MX(6) * MY(6))
DIM SHARED OBJECT7(MX(7) * MY(7))
DIM SHARED OBJECT8(MX(8) * MY(8))
DIM SHARED OBJECT9(MX(9) * MY(9))
DIM SHARED OBJECT10(MX(10) * MY(10))
DIM SHARED OBJECT11(MX(11) * MY(11))
DIM SHARED OBJECT12(MX(12) * MY(12))
DIM SHARED OBJECT13(MX(13) * MY(13))
DIM SHARED OBJECT14(MX(14) * MY(14))
DIM SHARED OBJECT15(MX(15) * MY(15))
DIM SHARED OBJECT16(MX(16) * MY(16))
DIM SHARED OBJECT17(MX(17) * MY(17))
DIM SHARED OBJECT18(MX(18) * MY(18))
DIM SHARED OBJECT19(MX(19) * MY(19))
DIM SHARED OBJECT20(MX(20) * MY(20))
DIM SHARED OBJECT21(MX(21) * MY(21))
DIM SHARED OBJECT22(MX(22) * MY(22))
DIM SHARED OBJECT23(MX(23) * MY(23))
DIM SHARED OBJECT24(MX(24) * MY(24))
DIM SHARED OBJECT25(MX(24) * MY(25))
DIM SHARED OBJECT26(MX(24) * MY(26))
DIM SHARED OBJECT27(MX(24) * MY(27))
DIM SHARED OBJECT28(MX(24) * MY(28))
DIM SHARED OBJECT29(MX(24) * MY(28))
                 
RESTORE GRAPHICS

GETOBJECT OBJECT0(), MX(0), MY(0)
GETOBJECT OBJECT1(), MX(1), MY(1)
GETOBJECT OBJECT2(), MX(2), MY(2)
GETOBJECT OBJECT3(), MX(3), MY(3)
GETOBJECT OBJECT4(), MX(4), MY(4)
GETOBJECT OBJECT5(), MX(5), MY(5)
GETOBJECT OBJECT6(), MX(6), MY(6)
GETOBJECT OBJECT7(), MX(7), MY(7)
GETOBJECT OBJECT8(), MX(8), MY(8)
GETOBJECT OBJECT9(), MX(9), MY(9)
GETOBJECT OBJECT10(), MX(10), MY(10)
GETOBJECT OBJECT11(), MX(11), MY(11)
GETOBJECT OBJECT12(), MX(12), MY(12)
GETOBJECT OBJECT13(), MX(13), MY(13)
GETOBJECT OBJECT14(), MX(14), MY(14)
GETOBJECT OBJECT15(), MX(15), MY(15)
GETOBJECT OBJECT16(), MX(16), MY(16)
GETOBJECT OBJECT17(), MX(17), MY(17)
GETOBJECT OBJECT18(), MX(18), MY(18)
GETOBJECT OBJECT19(), MX(19), MY(19)
GETOBJECT OBJECT20(), MX(20), MY(20)
GETOBJECT OBJECT21(), MX(21), MY(21)
GETOBJECT OBJECT22(), MX(22), MY(22)
GETOBJECT OBJECT23(), MX(23), MY(23)
GETOBJECT OBJECT24(), MX(24), MY(24)
GETOBJECT OBJECT25(), MX(25), MY(25)
GETOBJECT OBJECT26(), MX(26), MY(26)
GETOBJECT OBJECT27(), MX(27), MY(27)
GETOBJECT OBJECT28(), MX(28), MY(28)
GETOBJECT OBJECT29(), MX(28), MY(28)

'Game Information
CONST RIGHT = 1
CONST LEFT = 2
CONST DOWN = 3
CONST UP = 4

CONST ENEMY.TYPES = 2
CONST MAXIMUM.ENEMIES = 20

DIM ENEMY.DIRECTION(MAXIMUM.ENEMIES)
DIM ENEMY.X(MAXIMUM.ENEMIES)
DIM ENEMY.Y(MAXIMUM.ENEMIES)
DIM ENEMY.TYPE(MAXIMUM.ENEMIES)
DIM ENEMY.ALIVE(MAXIMUM.ENEMIES)
DIM ENEMY.NUMBER(ENEMY.TYPES)

ENEMY.NUMBER(1) = 9
ENEMY.NUMBER(2) = 10

CONST MAXIMUM.PLAYERS = 2
CONST PLAYER.FRAMES = 4

DIM PLAYER.FRAME.NUMBER(MAXIMUM.PLAYERS, PLAYER.FRAMES)
DIM PLAYER.DIRECTION(MAXIMUM.PLAYERS)
DIM PLAYER.FRAME(MAXIMUM.PLAYERS)
DIM PLAYER.X(MAXIMUM.PLAYERS)
DIM PLAYER.Y(MAXIMUM.PLAYERS)
DIM ALIVE(MAXIMUM.PLAYERS)
DIM PLAYER.SCORE(MAXIMUM.PLAYERS)
DIM PLAYER.NAME(MAXIMUM.PLAYERS) AS STRING

PLAYER.FRAME.NUMBER(1, 1) = 1
PLAYER.FRAME.NUMBER(1, 2) = 2
PLAYER.FRAME.NUMBER(1, 3) = 3
PLAYER.FRAME.NUMBER(1, 4) = 4
PLAYER.FRAME.NUMBER(2, 1) = 5
PLAYER.FRAME.NUMBER(2, 2) = 6
PLAYER.FRAME.NUMBER(2, 3) = 7
PLAYER.FRAME.NUMBER(2, 4) = 8

CONST MAZEPARTS = 16

CONST BONUS.ITEMS = 2
DIM BONUS.NUMBER(BONUS.ITEMS)
DIM BONUS.SCORE(BONUS.ITEMS)
BONUS.NUMBER(1) = 11
BONUS.NUMBER(2) = 12
BONUS.SCORE(1) = 1
BONUS.SCORE(2) = 10

'Level Information
DIM SHARED MAXIMUM.X: MAXIMUM.X = 1
DIM SHARED MAXIMUM.Y: MAXIMUM.Y = 1

DIM ITEM(MAXIMUM.X, MAXIMUM.Y)

'Misc Variables
RANDOMIZE TIMER

DIM SHARED KP AS STRING
CONST DELAY = 100
CONST LEVELS = 1
PLAY ON

CONST MAXIMUM.SCORES = 10

DIM SCORE(LEVELS, MAXIMUM.SCORES)
DIM PERSON(LEVELS, MAXIMUM.SCORES) AS STRING

FOR A = 1 TO LEVELS
FOR B = 1 TO MAXIMUM.SCORES
PERSON(A, B) = "Mr. Nobody": SCORE(A, B) = 0
NEXT B
NEXT A
ON ERROR GOTO NO.FILE
OPEN "EPIC2.DAT" FOR INPUT AS #1

INPUT #1, PLEVELS
INPUT #1, PMAXIMUM.SCORES
FOR A = 1 TO PLEVELS
FOR B = 1 TO PMAXIMUM.SCORES
INPUT #1, PERSON(A, B), SCORE(A, B)
NEXT B
NEXT A

CLOSE #1

MILLIDELAY 0

DIM SHARED EDIT.LEVEL(0 TO 65, 0 TO 49)

'Now for the Game
PLAY.GAME:
CLS
WHILE INKEY$ <> "": WEND: LEVEL = -1

GOSUB CHOOSE.LEVEL
GOSUB SHOW.LEVEL
COLOR 12
LOCATE 20, 8: PRINTF "By Andre' Dirk"
COLOR 14
LOCATE 21, 8: PRINTF "(C)opyright 97"
KP = INPUT$(1)
IF KP = CHR$(27) THEN
END
END IF

WHILE INKEY$ <> "": WEND: LEVEL = 0

GOSUB CHOOSE.LEVEL
GOSUB SHOW.LEVEL

COLOR 12
MIDDLE 9, " E P I C  2"
COLOR 14
MIDDLE 11, "  1) Game  "
MIDDLE 13, "  2) Scores"
MIDDLE 15, "  3) Editor"
COLOR 15
MIDDLE 17, " (1, 2, 3) ?"

DO
KP = INPUT$(1)
IF KP = CHR$(27) THEN GOTO PLAY.GAME
IF KP = "1" THEN EXIT DO
IF KP = "2" THEN GOSUB HI.SCORES: GOTO PLAY.GAME
IF KP = "3" THEN
WHILE INKEY$ <> "": WEND: LEVEL = 0

GOSUB CHOOSE.LEVEL
GOSUB SHOW.LEVEL

COLOR 12: MIDDLE 2, "EPIC 2"
COLOR 11: MIDDLE 4, "Level Editor"
COLOR 12
MIDDLE 9, "  Controls "
COLOR 14
LOCATE 11, 13: PRINT "P - Play Level"
LOCATE 13, 13: PRINT "L)oad, S)ave"
LOCATE 15, 13: PRINT "Enter - OK"
LOCATE 17, 13: PRINT "Space - Select"

DO
KP = INPUT$(1)
IF KP = CHR$(27) THEN GOTO PLAY.GAME
IF KP = " " OR KP = CHR$(13) THEN A = EDITOR
SELECT CASE A
CASE 1
WHILE INKEY$ <> "": WEND: LEVEL = 0

GOSUB CHOOSE.LEVEL
GOSUB SHOW.LEVEL

COLOR 12
MIDDLE 9, " E P I C  2"
COLOR 15
MIDDLE 11, "  By Andre'"
COLOR 14
MIDDLE 13, "  How many"
MIDDLE 14, "  players-"
COLOR 15
MIDDLE 16, " (1 to 2) ?"

DO
KP = INPUT$(1)
IF KP = CHR$(27) THEN GOTO PLAY.GAME
PLAYERS = VAL(KP)
LOOP UNTIL PLAYERS > 0 AND PLAYERS <= MAXIMUM.PLAYERS
LEVEL = -3: GOSUB PLAY.LEVEL

CASE ELSE: GOTO PLAY.GAME
END SELECT
LOOP
END IF
LOOP

WHILE INKEY$ <> "": WEND: LEVEL = 0

GOSUB CHOOSE.LEVEL
GOSUB SHOW.LEVEL

COLOR 12
MIDDLE 9, " E  P  I  C"
COLOR 15
MIDDLE 11, "  By Andre'"
COLOR 14
MIDDLE 13, "  How many"
MIDDLE 14, "  players-"
COLOR 15
MIDDLE 16, " (1 to 2) ?"

DO
KP = INPUT$(1)
IF KP = CHR$(27) THEN GOTO PLAY.GAME
PLAYERS = VAL(KP)
LOOP UNTIL PLAYERS > 0 AND PLAYERS <= MAXIMUM.PLAYERS

LEVEL = 1

GOSUB PLAY.LEVEL
GOTO PLAY.GAME
GOTO PLAY.GAME

PLAY.LEVEL:
TLEVEL = LEVEL
WHILE INKEY$ <> "": WEND: LEVEL = 0

GOSUB CHOOSE.LEVEL
GOSUB SHOW.LEVEL
LEVEL = TLEVEL
GOSUB CHOOSE.LEVEL

COLOR 12
MIDDLE 9, " E P I C  2"
COLOR 14
MIDDLE 11, " Now entering"
SELECT CASE LEVEL
CASE -3: MIDDLE 12, " Your Level -"
CASE -2: MIDDLE 12, " Bonus Land -"
CASE -1: MIDDLE 12, " Cheat Land -"
CASE ELSE
MIDDLE 12, " Super  Arena"
END SELECT
COLOR 12
MIDDLE 14, "  " + LTRIM$(STR$(ENEMIES)) + " ghosts"
COLOR 15
MIDDLE 16, "  " + LTRIM$(STR$(DOTS)) + " dots"
KP = INPUT$(1)
IF KP = CHR$(27) THEN GOTO PLAY.GAME
GOSUB SHOW.LEVEL

FOR A = 1 TO PLAYERS
PLAYER.SCORE(A) = 0
ALIVE(A) = 1
COLOR 14
BOX 12, 5, 14, 35
COLOR 15
TAP = BGROUND: BGROUND = 0
LOCATE 13, 6: PRINTF "Player #" + LTRIM$(STR$(A)) + " name? "
BGROUND = TAP
LOCATE 13, 22: RFIELD PLAYER.NAME(A), 1, 10, "XNS"

NEXT A

FOR A = 1 TO ENEMIES
ENEMY.ALIVE(A) = 1
NEXT A
GOSUB SHOW.LEVEL
DO

DO

MILLIDELAY DELAY

LIVE = PLAYERS
'Move Players -->
FOR A = 1 TO PLAYERS

U = -50
D = -50
L = -50
R = -50
X = PLAYER.X(A)
Y = PLAYER.Y(A)

SELECT CASE ITEM(X - 1, Y)
CASE 13 TO 28
CASE ELSE: L = ITEM(X - 1, Y)
END SELECT

SELECT CASE ITEM(X + 1, Y)
CASE 13 TO 28
CASE ELSE: R = ITEM(X + 1, Y)
END SELECT

SELECT CASE ITEM(X, Y + 1)
CASE 13 TO 28
CASE ELSE: D = ITEM(X, Y + 1)
END SELECT

SELECT CASE ITEM(X, Y - 1)
CASE 13 TO 28
CASE ELSE: U = ITEM(X, Y - 1)
END SELECT


IF L = -1 THEN ITEM(PLAYER.X(A) - 1, PLAYER.Y(A)) = 29: L = 29
IF R = -1 THEN ITEM(PLAYER.X(A) + 1, PLAYER.Y(A)) = 29: R = 29
IF U = -1 THEN ITEM(PLAYER.X(A), PLAYER.Y(A) - 1) = 29: U = 29
IF D = -1 THEN ITEM(PLAYER.X(A), PLAYER.Y(A) + 1) = 29: D = 29

DISPLAY.GRAPHIC PLAYER.X(A), PLAYER.Y(A), ITEM(X, Y)

IF ALIVE(A) THEN

IF PLAYER.DIRECTION(A) = LEFT THEN PLAYER.FRAME(A) = PLAYER.FRAME.NUMBER(A, LEFT)
IF PLAYER.DIRECTION(A) = RIGHT THEN PLAYER.FRAME(A) = PLAYER.FRAME.NUMBER(A, RIGHT)
IF PLAYER.DIRECTION(A) = DOWN THEN PLAYER.FRAME(A) = PLAYER.FRAME.NUMBER(A, DOWN)
IF PLAYER.DIRECTION(A) = UP THEN PLAYER.FRAME(A) = PLAYER.FRAME.NUMBER(A, UP)

IF PLAYER.DIRECTION(A) = LEFT AND L <> -50 THEN PLAYER.X(A) = PLAYER.X(A) - 1
IF PLAYER.DIRECTION(A) = RIGHT AND R <> -50 THEN PLAYER.X(A) = PLAYER.X(A) + 1
IF PLAYER.DIRECTION(A) = DOWN AND D <> -50 THEN PLAYER.Y(A) = PLAYER.Y(A) + 1
IF PLAYER.DIRECTION(A) = UP AND U <> -50 THEN PLAYER.Y(A) = PLAYER.Y(A) - 1

IF PLAYER.DIRECTION(A) = LEFT AND L = -50 THEN PLAYER.DIRECTION(A) = 0
IF PLAYER.DIRECTION(A) = RIGHT AND R = -50 THEN PLAYER.DIRECTION(A) = 0
IF PLAYER.DIRECTION(A) = DOWN AND D = -50 THEN PLAYER.DIRECTION(A) = 0
IF PLAYER.DIRECTION(A) = UP AND U = -50 THEN PLAYER.DIRECTION(A) = 0

IF PLAYER.X(A) < 1 THEN PLAYER.X(A) = 1
IF PLAYER.Y(A) < 1 THEN PLAYER.Y(A) = 1
IF PLAYER.X(A) > MAXIMUM.X THEN PLAYER.X(A) = MAXIMUM.X
IF PLAYER.Y(A) > MAXIMUM.Y THEN PLAYER.Y(A) = MAXIMUM.Y

DISPLAY.GRAPHIC PLAYER.X(A), PLAYER.Y(A), PLAYER.FRAME(A)

IF ITEM(PLAYER.X(A), PLAYER.Y(A)) = BONUS.NUMBER(1) THEN ITEM(PLAYER.X(A), PLAYER.Y(A)) = 0: PLAYER.SCORE(A) = PLAYER.SCORE(A) + BONUS.SCORE(1): PLAY "O4T255L64C": DOTS = DOTS - 1
IF ITEM(PLAYER.X(A), PLAYER.Y(A)) = BONUS.NUMBER(2) THEN ITEM(PLAYER.X(A), PLAYER.Y(A)) = 0: PLAYER.SCORE(A) = PLAYER.SCORE(A) + BONUS.SCORE(2): PLAY "O4T255L64ABCDEFGABCDEFG"
IF ITEM(PLAYER.X(A), PLAYER.Y(A)) = 29 THEN
DO
TX = INT(RND * MAXIMUM.X) + 1
TY = INT(RND * MAXIMUM.Y) + 1
LOOP UNTIL ITEM(TX, TY) = 29 AND NOT (TX = PLAYER.X(A) AND TY = PLAYER.Y(A))
DISPLAY.GRAPHIC PLAYER.X(A), PLAYER.Y(A), ITEM(PLAYER.X(A), PLAYER.Y(A))
PLAYER.X(A) = TX: PLAYER.Y(A) = TY
DISPLAY.GRAPHIC PLAYER.X(A), PLAYER.Y(A), PLAYER.FRAME(A)
ITEM(PLAYER.X(A), PLAYER.Y(A)) = -1
PLAY "O4T255L64ABCDEFGABCDEFG"
END IF

FOR B = 1 TO ENEMIES
IF ENEMY.ALIVE(B) THEN
IF PLAYER.X(A) = ENEMY.X(B) AND PLAYER.Y(A) = ENEMY.Y(B) THEN ALIVE(A) = 0: PLAY "O1T255L64ABCDEFGABCDEFG"
END IF
NEXT B
ELSE
LIVE = LIVE - 1
END IF
NEXT A
'Move Enemies -->
FOR A = 1 TO ENEMIES

U = -50
D = -50
L = -50
R = -50
X = ENEMY.X(A)
Y = ENEMY.Y(A)

SELECT CASE ITEM(X - 1, Y)
CASE 13 TO 28
CASE ELSE: L = ITEM(X - 1, Y)
END SELECT

SELECT CASE ITEM(X + 1, Y)
CASE 13 TO 28
CASE ELSE: R = ITEM(X + 1, Y)
END SELECT

SELECT CASE ITEM(X, Y + 1)
CASE 13 TO 28
CASE ELSE: D = ITEM(X, Y + 1)
END SELECT

SELECT CASE ITEM(X, Y - 1)
CASE 13 TO 28
CASE ELSE: U = ITEM(X, Y - 1)
END SELECT

TS = 0

SELECT CASE ENEMY.DIRECTION(A)
CASE LEFT: TN = RIGHT
CASE RIGHT: TN = LEFT
CASE UP: TN = DOWN
CASE DOWN: TN = UP
CASE ELSE: TN = 0
END SELECT

IF L <> -50 AND TN <> LEFT THEN TS = TS + 1: E.WAY(TS) = LEFT
IF R <> -50 AND TN <> RIGHT THEN TS = TS + 1: E.WAY(TS) = RIGHT
IF D <> -50 AND TN <> DOWN THEN TS = TS + 1: E.WAY(TS) = DOWN
IF U <> -50 AND TN <> UP THEN TS = TS + 1: E.WAY(TS) = UP

IF TS = 0 THEN ENEMY.DIRECTION(A) = TN ELSE ENEMY.DIRECTION(A) = E.WAY(INT(RND * TS) + 1)

DISPLAY.GRAPHIC ENEMY.X(A), ENEMY.Y(A), ITEM(X, Y)

IF ENEMY.ALIVE(A) THEN
IF ENEMY.DIRECTION(A) = LEFT AND L <> -50 THEN ENEMY.X(A) = ENEMY.X(A) - 1
IF ENEMY.DIRECTION(A) = RIGHT AND R <> -50 THEN ENEMY.X(A) = ENEMY.X(A) + 1
IF ENEMY.DIRECTION(A) = DOWN AND D <> -50 THEN ENEMY.Y(A) = ENEMY.Y(A) + 1
IF ENEMY.DIRECTION(A) = UP AND U <> -50 THEN ENEMY.Y(A) = ENEMY.Y(A) - 1

IF ENEMY.DIRECTION(A) = LEFT AND L = -50 THEN ENEMY.DIRECTION(A) = 0
IF ENEMY.DIRECTION(A) = RIGHT AND R = -50 THEN ENEMY.DIRECTION(A) = 0
IF ENEMY.DIRECTION(A) = DOWN AND D = -50 THEN ENEMY.DIRECTION(A) = 0
IF ENEMY.DIRECTION(A) = UP AND U = -50 THEN ENEMY.DIRECTION(A) = 0

IF ENEMY.X(A) < 1 THEN ENEMY.X(A) = 1
IF ENEMY.Y(A) < 1 THEN ENEMY.Y(A) = 1
IF ENEMY.X(A) > MAXIMUM.X THEN ENEMY.X(A) = MAXIMUM.X
IF ENEMY.Y(A) > MAXIMUM.Y THEN ENEMY.Y(A) = MAXIMUM.Y

DISPLAY.GRAPHIC ENEMY.X(A), ENEMY.Y(A), ENEMY.NUMBER(ENEMY.TYPE(A))
FOR B = 1 TO PLAYERS
IF PLAYER.ALIVE(B) THEN
IF PLAYER.X(B) = ENEMY.X(A) AND PLAYER.Y(B) = ENEMY.Y(A) THEN ALIVE(B) = 0: PLAY "O1T255L64ABCDEFGABCDEFG"
END IF
NEXT B
END IF
NEXT A

IF DOTS = 0 THEN EXIT DO
IF LIVE = 0 THEN EXIT DO

KP = UCASE$(INKEY$)
LOOP WHILE KP = ""

SELECT CASE KP
CASE CHR$(27): GOTO PLAY.GAME

CASE CHR$(0) + "H": PLAYER.DIRECTION(1) = UP
CASE CHR$(0) + "P": PLAYER.DIRECTION(1) = DOWN
CASE CHR$(0) + "K": PLAYER.DIRECTION(1) = LEFT
CASE CHR$(0) + "M": PLAYER.DIRECTION(1) = RIGHT

CASE "W": PLAYER.DIRECTION(2) = UP
CASE "S": PLAYER.DIRECTION(2) = DOWN
CASE "A": PLAYER.DIRECTION(2) = LEFT
CASE "D": PLAYER.DIRECTION(2) = RIGHT

CASE "P"
'Pause
LINE (9 * 8, 11.5 * 8)-(29 * 8, 13.5 * 8), BGROUND, BF
LINE (9 * 8, 11.5 * 8)-(29 * 8, 13.5 * 8), 14, B
COLOR 12
MIDDLE 13, "Game Paused"
DO
KP = INPUT$(1)
LOOP UNTIL UCASE$(KP) = "P"
GOSUB SHOW.LEVEL
END SELECT
IF DOTS = 0 OR LIVE = 0 THEN EXIT DO
LOOP
TLEVEL = LEVEL
WHILE INKEY$ <> "": WEND: LEVEL = 0

GOSUB CHOOSE.LEVEL
GOSUB SHOW.LEVEL

IF LIVE = 0 THEN
COLOR 12
MIDDLE 9, "  GAME OVER"
COLOR 15
MIDDLE 11, "   Scores-"
COLOR 14
MIDDLE 13, "Player 1: " + RIGHT$(LTRIM$(STR$(PLAYER.SCORE(1))), 4)
IF PLAYERS = 2 THEN MIDDLE 14, "Player 2: " + RIGHT$(LTRIM$(STR$(PLAYER.SCORE(2))), 4)
COLOR 15
MIDDLE 16, "  Press a key"
ELSE
COLOR 12
MIDDLE 9, "  You've won!"
COLOR 15
MIDDLE 11, "   Scores-"
COLOR 14
MIDDLE 13, "Player 1: " + RIGHT$(LTRIM$(STR$(PLAYER.SCORE(1))), 4)
IF PLAYERS = 2 THEN MIDDLE 14, "Player 2: " + RIGHT$(LTRIM$(STR$(PLAYER.SCORE(2))), 4)
COLOR 15
MIDDLE 16, "  Press a key"

END IF

KP = INPUT$(1)
LEVEL = TLEVEL

IF LEVEL > 0 AND LEVEL <= LEVELS THEN
GOOD = 0
FOR A = 1 TO PLAYERS

IF SORT(PERSON(), SCORE(), PLAYER.NAME(A), PLAYER.SCORE(A), LEVEL) THEN
GOOD = 1
COLOR 14
BOX 10, 10, 14, 30
TAP = BGROUND: BGROUND = 0
COLOR 12
MIDDLE 11, " Player #" + LTRIM$(STR$(A))
MIDDLE 12, " has a high score"
COLOR 11
MIDDLE 13, LTRIM$(STR$(PLAYER.SCORE(A)))
BGROUND = TAP
KP = INPUT$(1)
END IF
NEXT A

OPEN "EPIC2.DAT" FOR OUTPUT AS #2
WRITE #2, LEVELS
WRITE #2, MAXIMUM.SCORES
FOR B = 1 TO LEVELS
FOR C = 1 TO MAXIMUM.SCORES
WRITE #2, PERSON(B, C), SCORE(B, C)
NEXT C
NEXT B
CLOSE #2
GOSUB HI.SCORES
IF GOOD THEN
LEVEL = -2
GOSUB PLAY.LEVEL

END IF

END IF
RETURN
GOTO PLAY.GAME

HI.SCORES:
TAP = BGROUND: BGROUND = 0

LINE (4.5 * 8, 4.5 * 8)-(34.5 * 8, 19.5 * 8), BGROUND, BF
LINE (4.5 * 8, 4.5 * 8)-(34.5 * 8, 19.5 * 8), 14, B

FOR B = 1 TO LEVELS
COLOR 10: MIDDLE 6, "   High Scores"
COLOR 11: MIDDLE 7, "   Level " + LTRIM$(STR$(B))
COLOR 7
FOR A = 1 TO MAXIMUM.SCORES
COLOR 15
SPACES = 29 - (LEN(PERSON(B, A)) + LEN(LTRIM$(STR$(SCORE(B, A)))))
LOCATE A + 8, 6: PRINTF PERSON(B, A) + SPACE$(SPACES) + LTRIM$(STR$(SCORE(B, A)))
NEXT A
KP = INPUT$(1): IF KP = CHR$(27) THEN BGROUND = TAP: GOTO PLAY.GAME
NEXT B

BGROUND = TAP
RETURN

CHOOSE.LEVEL:

ENEMIES = 0

SELECT CASE LEVEL
CASE -2: RESTORE BONUS.LEVEL
CASE -1: RESTORE TITLE.SCREEN
CASE 0: RESTORE MIDDLE.BOX
CASE 1: RESTORE LEVEL1
CASE -3
CASE ELSE: GOTO PLAY.GAME
END SELECT

DOTS = 0
READ MAXIMUM.X, MAXIMUM.Y
IF LEVEL = -3 THEN MAXIMUM.X = 64: MAXIMUM.Y = 48
REDIM ITEM(0 TO MAXIMUM.X + 1, 0 TO MAXIMUM.Y + 1)

FOR Y = 1 TO MAXIMUM.Y
FOR X = 1 TO MAXIMUM.X
IF LEVEL = -3 THEN ITEM(X, Y) = EDIT.LEVEL(X, Y) ELSE READ ITEM(X, Y)
SELECT CASE ITEM(X, Y)

CASE PLAYER.FRAME.NUMBER(1, 1), PLAYER.FRAME.NUMBER(1, 2), PLAYER.FRAME.NUMBER(1, 3), PLAYER.FRAME.NUMBER(1, 4)
PLAYER.FRAME(1) = ITEM(X, Y)
PLAYER.DIRECTION(1) = ITEM(X, Y)
PLAYER.X(1) = X: PLAYER.Y(1) = Y: ITEM(X, Y) = 0


CASE PLAYER.FRAME.NUMBER(2, 1), PLAYER.FRAME.NUMBER(2, 2), PLAYER.FRAME.NUMBER(2, 3), PLAYER.FRAME.NUMBER(2, 4)
PLAYER.FRAME(2) = ITEM(X, Y)
PLAYER.DIRECTION(2) = ITEM(X, Y) - 4
PLAYER.X(2) = X: PLAYER.Y(2) = Y: ITEM(X, Y) = 0


CASE ENEMY.NUMBER(1)
ENEMIES = ENEMIES + 1
IF ENEMIES > 20 THEN ENEMIES = 20: ITEM(X, Y) = 0 ELSE ENEMY.X(ENEMIES) = X: ENEMY.Y(ENEMIES) = Y: ITEM(X, Y) = 0: ENEMY.TYPE(ENEMIES) = 1
CASE ENEMY.NUMBER(2)
ENEMIES = ENEMIES + 1
IF ENEMIES > 20 THEN ENEMIES = 20: ITEM(X, Y) = 0 ELSE ENEMY.X(ENEMIES) = X: ENEMY.Y(ENEMIES) = Y: ITEM(X, Y) = 0: ENEMY.TYPE(ENEMIES) = 2
CASE BONUS.NUMBER(1): DOTS = DOTS + 1

END SELECT
NEXT X
NEXT Y
RETURN

SHOW.LEVEL:
FOR X = 1 TO MAXIMUM.X
FOR Y = 1 TO MAXIMUM.Y
DISPLAY.GRAPHIC X, Y, ITEM(X, Y)
NEXT Y
NEXT X
RETURN

NO.FILE:
OPEN "EPIC2.DAT" FOR OUTPUT AS #2
WRITE #2, LEVELS
WRITE #2, PMAXIMUM.SCORES
FOR B = 1 TO LEVELS
FOR A = 1 TO MAXIMUM.SCORES
WRITE #2, PERSON(B, A), SCORE(B, A)
NEXT A
NEXT B
CLOSE #2
GOTO PLAY.GAME

END

GRAPHICS:
'Nothing
DATA   ,  ,  ,  ,  ,  ,  ,  ,  ,
DATA   ,  ,  ,  ,  ,  ,  ,  ,  ,
DATA   ,  ,  ,  ,  ,  ,  ,  ,  ,
DATA   ,  ,  ,  ,  ,  ,  ,  ,  ,
DATA   ,  ,  ,  ,  ,  ,  ,  ,  ,
DATA   ,  ,  ,  ,  ,  ,  ,  ,  ,
DATA   ,  ,  ,  ,  ,  ,  ,  ,  ,
DATA   ,  ,  ,  ,  ,  ,  ,  ,  ,
DATA   ,  ,  ,  ,  ,  ,  ,  ,  ,
DATA   ,  ,  ,  ,  ,  ,  ,  ,  ,
'Player 1 - Forward
DATA   ,  ,  ,  ,  ,  ,  ,  ,  ,
DATA   ,  ,  ,14,14,14,  ,  ,  ,
DATA   ,  ,14,14,14,14,14,  ,  ,
DATA   ,14,14,14,  ,14,14,14,  ,
DATA   ,14,14,14,14,14,14,  ,  ,
DATA   ,14,14,14,14,14,  ,  ,  ,
DATA   ,14,14,14,14,14,14,  ,  ,
DATA   ,14,14,14,14,14,14,14,  ,
DATA   ,  ,14,14,14,14,14,  ,  ,
DATA   ,  ,  ,14,14,14,  ,  ,  ,
'Player 1 - Backward
DATA   ,  ,  ,  ,  ,  ,  ,  ,  ,
DATA   ,  ,  ,14,14,14,  ,  ,  ,
DATA   ,  ,14,14,14,14,14,  ,  ,
DATA   ,14,14,14,  ,14,14,14,  ,
DATA   ,  ,14,14,14,14,14,14,  ,
DATA   ,  ,  ,14,14,14,14,14,  ,
DATA   ,  ,14,14,14,14,14,14,  ,
DATA   ,14,14,14,14,14,14,14,  ,
DATA   ,  ,14,14,14,14,14,  ,  ,
DATA   ,  ,  ,14,14,14,  ,  ,  ,
'Player 1 - Down
DATA   ,  ,  ,  ,  ,  ,  ,  ,  ,
DATA   ,  ,  ,  ,  ,  ,  ,  ,  ,
DATA   ,  ,  ,14,14,14,14,14,  ,
DATA   ,  ,14,14,14,14,14,14,14,
DATA   ,14,14,14,14,14,14,14,14,14
DATA   ,14,14,14,14,14,14,14,14,14
DATA   ,14,14,  ,14,14,14,14,14,14
DATA   ,  ,14,14,14,  ,14,14,14,
DATA   ,  ,  ,14,  ,  ,  ,14,  ,
DATA   ,  ,  ,  ,  ,  ,  ,  ,  ,
'Player 1 - Up
DATA   ,  ,  ,  ,  ,  ,  ,  ,  ,
DATA   ,  ,14,  ,  ,  ,14,  ,  ,
DATA   ,14,14,14,  ,14,14,14,  ,
DATA 14,14,14,14,14,14,  ,14,14,
DATA 14,14,14,14,14,14,14,14,14,
DATA 14,14,14,14,14,14,14,14,14,
DATA   ,14,14,14,14,14,14,14,  ,
DATA   ,  ,14,14,14,14,14,  ,  ,
DATA   ,  ,  ,  ,  ,  ,  ,  ,  ,
DATA   ,  ,  ,  ,  ,  ,  ,  ,  ,
'Player 2 - Forward
DATA   ,  ,  ,  ,  , ,  ,  ,  ,
DATA   ,  ,  ,12,12,12,  ,  ,  ,
DATA   ,  ,12,12,12,12,12,  ,  ,
DATA   ,12,12,12,  ,12,12,12,  ,
DATA   ,12,12,12,12,12,12,  ,  ,
DATA   ,12,12,12,12,12,  ,  ,  ,
DATA   ,12,12,12,12,12,12,  ,  ,
DATA   ,12,12,12,12,12,12,12,  ,
DATA   ,  ,12,12,12,12,12,  ,  ,
DATA   ,  ,  ,12,12,12,  ,  ,  ,
'Player 2 - Backward
DATA   ,  ,  ,  ,  ,  ,  ,  ,  ,
DATA   ,  ,  ,12,12,12,  ,  ,  ,
DATA   ,  ,12,12,12,12,12,  ,  ,
DATA   ,12,12,12,  ,12,12,12,  ,
DATA   ,  ,12,12,12,12,12,12,  ,
DATA   ,  ,  ,12,12,12,12,12,  ,
DATA   ,  ,12,12,12,12,12,12,  ,
DATA   ,12,12,12,12,12,12,12,  ,
DATA   ,  ,12,12,12,12,12,  ,  ,
DATA   ,  ,  ,12,12,12,  ,  ,  ,
'Player 2 - Down
DATA   ,  ,  ,  ,  ,  ,  ,  ,  ,
DATA   ,  ,  ,  ,  ,  ,  ,  ,  ,
DATA   ,  ,  ,12,12,12,12,12,  ,
DATA   ,  ,12,12,12,12,12,12,12,
DATA   ,12,12,12,12,12,12,12,12,12
DATA   ,12,12,12,12,12,12,12,12,12
DATA   ,12,12,  ,12,12,12,12,12,12
DATA   ,  ,12,12,12,  ,12,12,12,
DATA   ,  ,  ,12,  ,  ,  ,12,  ,
DATA   ,  ,  ,  ,  ,  ,  ,  ,  ,
'Player 2 - Up
DATA   ,  ,  ,  ,  ,  ,  ,  ,  ,
DATA   ,  ,12,  ,  ,  ,12,  ,  ,
DATA   ,12,12,12,  ,12,12,12,  ,
DATA 12,12,12,12,12,12,  ,12,12,
DATA 12,12,12,12,12,12,12,12,12,
DATA 12,12,12,12,12,12,12,12,12,
DATA   ,12,12,12,12,12,12,12,  ,
DATA   ,  ,12,12,12,12,12,  ,  ,
DATA   ,  ,  ,  ,  ,  ,  ,  ,  ,
DATA   ,  ,  ,  ,  ,  ,  ,  ,  ,
'Enemy 1
DATA   ,  ,  ,  ,  ,  ,  ,  ,  ,
DATA   ,  ,  ,11,11,11,11,  ,  ,
DATA   ,  ,11,11,11,11,11,11,  ,
DATA   ,11,11,  ,11,11,  ,11,11,
DATA   ,11,11,11,11,11,11,11,11,
DATA   ,11,11,11,11,11,11,11,11,
DATA   ,11,11,11,  ,  ,11,11,11,
DATA   ,11,11,  ,11,11,  ,11,11,
DATA   ,11,11,11,11,11,11,11,11,
DATA   ,11,  ,11,  ,  ,11,  ,11,
'Enemy 2
DATA   ,  ,  ,  ,  ,  ,  ,  ,  ,
DATA   ,  ,  ,13,13,13,13,  ,  ,
DATA   ,  ,13,13,13,13,13,13,  ,
DATA   ,13,13,  ,13,13,  ,13,13,
DATA   ,13,13,13,13,13,13,13,13,
DATA   ,13,13,13,13,13,13,13,13,
DATA   ,13,13,13,  ,  ,13,13,13,
DATA   ,13,13,  ,13,13,  ,13,13,
DATA   ,13,13,13,13,13,13,13,13,
DATA   ,13,  ,13,  ,  ,13,  ,13,
'Normal Pill
DATA   ,  ,  ,  ,  ,  ,  ,  ,  ,
DATA   ,  ,  ,  ,  ,  ,  ,  ,  ,
DATA   ,  ,  ,  ,  ,  ,  ,  ,  ,
DATA   ,  ,  ,  ,15,15,  ,  ,  ,
DATA   ,  ,  ,15,15,15,15,  ,  ,
DATA   ,  ,  ,15,15,15,15,  ,  ,
DATA   ,  ,  ,  ,15,15,  ,  ,  ,
DATA   ,  ,  ,  ,  ,  ,  ,  ,  ,
DATA   ,  ,  ,  ,  ,  ,  ,  ,  ,
DATA   ,  ,  ,  ,  ,  ,  ,  ,  ,
'Super Pill
DATA   ,  ,  ,  ,  ,  ,  ,  ,  ,
DATA   ,  ,12,  ,  ,  ,  ,12,  ,
DATA   ,12,  ,  ,13,13,  ,  ,12,
DATA   ,  ,  ,13,14,14,13,  ,  ,
DATA   ,  ,13,14,11,11,14,13,  ,
DATA   ,  ,13,14,11,11,14,13,  ,
DATA   ,  ,  ,13,14,14,13,  ,  ,
DATA   ,12,  ,  ,13,13,  ,  ,12,
DATA   ,  ,12,  ,  ,  ,  ,12,  ,
DATA   ,  ,  ,  ,  ,  ,  ,  ,  ,
'Wall - & -
DATA   ,  ,  ,  ,  ,  ,  ,  ,  ,
DATA 10,10,10,10,10,10,10,10,10,10
DATA 11,11,11,11,11,11,11,11,11,11
DATA 12,12,12,12,12,12,12,12,12,12
DATA 13,13,13,13,13,13,13,13,13,13
DATA 13,13,13,13,13,13,13,13,13,13
DATA 12,12,12,12,12,12,12,12,12,12
DATA 11,11,11,11,11,11,11,11,11,11
DATA 10,10,10,10,10,10,10,10,10,10
DATA   ,  ,  ,  ,  ,  ,  ,  ,  ,
'Wall < & -
DATA   ,  ,  ,  ,  ,  ,  ,  ,  ,
DATA   ,  ,  ,10,10,10,10,10,10,10
DATA   ,  ,11,11,11,11,11,11,11,11
DATA   ,12,12,12,12,12,12,12,12,12
DATA   ,13,13,13,13,13,13,13,13,13
DATA   ,13,13,13,13,13,13,13,13,13
DATA   ,12,12,12,12,12,12,12,12,12
DATA   ,  ,11,11,11,11,11,11,11,11
DATA   ,  ,  ,10,10,10,10,10,10,10
DATA   ,  ,  ,  ,  ,  ,  ,  ,  ,
'Wall - & >
DATA   ,  ,  ,  ,  ,  ,  ,  ,  ,
DATA 10,10,10,10,10,10,10,  ,  ,
DATA 11,11,11,11,11,11,11,11,  ,
DATA 12,12,12,12,12,12,12,12,12,
DATA 13,13,13,13,13,13,13,13,13,
DATA 13,13,13,13,13,13,13,13,13,
DATA 12,12,12,12,12,12,12,12,12,
DATA 11,11,11,11,11,11,11,11,  ,
DATA 10,10,10,10,10,10,10,  ,  ,
DATA   ,  ,  ,  ,  ,  ,  ,  ,  ,
'I & I
DATA   ,10,11,12,13,13,12,11,10,
DATA   ,10,11,12,13,13,12,11,10,
DATA   ,10,11,12,13,13,12,11,10,
DATA   ,10,11,12,13,13,12,11,10,
DATA   ,10,11,12,13,13,12,11,10,
DATA   ,10,11,12,13,13,12,11,10,
DATA   ,10,11,12,13,13,12,11,10,
DATA   ,10,11,12,13,13,12,11,10,
DATA   ,10,11,12,13,13,12,11,10,
DATA   ,10,11,12,13,13,12,11,10,
'I & ^
DATA   ,  ,  ,  ,  ,  ,  ,  ,  ,
DATA   ,  ,  ,12,13,13,12,  ,  ,
DATA   ,  ,11,12,13,13,12,11,  ,
DATA   ,10,11,12,13,13,12,11,10,
DATA   ,10,11,12,13,13,12,11,10,
DATA   ,10,11,12,13,13,12,11,10,
DATA   ,10,11,12,13,13,12,11,10,
DATA   ,10,11,12,13,13,12,11,10,
DATA   ,10,11,12,13,13,12,11,10,
DATA   ,10,11,12,13,13,12,11,10,
'v & I
DATA   ,10,11,12,13,13,12,11,10,
DATA   ,10,11,12,13,13,12,11,10,
DATA   ,10,11,12,13,13,12,11,10,
DATA   ,10,11,12,13,13,12,11,10,
DATA   ,10,11,12,13,13,12,11,10,
DATA   ,10,11,12,13,13,12,11,10,
DATA   ,10,11,12,13,13,12,11,10,
DATA   ,  ,11,12,13,13,12,11,  ,
DATA   ,  ,  ,12,13,13,12,  ,  ,
DATA   ,  ,  ,  ,  ,  ,  ,  ,  ,
'I-
DATA   ,  ,  ,  ,  ,  ,  ,  ,  ,
DATA   ,10,10,10,10,10,10,10,10,10
DATA   ,10,11,11,11,11,11,11,11,11
DATA   ,10,11,12,12,12,12,12,12,12
DATA   ,10,11,12,13,13,13,13,13,13
DATA   ,10,11,12,13,13,13,13,13,13
DATA   ,10,11,12,13,13,12,12,12,12
DATA   ,10,11,12,13,13,12,11,11,11
DATA   ,10,11,12,13,13,12,11,10,10
DATA   ,10,11,12,13,13,12,11,10,
'I_
DATA   ,10,11,12,13,13,12,11,10,
DATA   ,10,11,12,13,13,12,11,10,10
DATA   ,10,11,12,13,13,12,11,11,11
DATA   ,10,11,12,13,13,12,12,12,12
DATA   ,10,11,12,13,13,13,13,13,13
DATA   ,10,11,12,13,13,13,13,13,13
DATA   ,10,11,12,12,12,12,12,12,12
DATA   ,10,11,11,11,11,11,11,11,11
DATA   ,10,10,10,10,10,10,10,10,10
DATA   ,  ,  ,  ,  ,  ,  ,  ,  ,
'_I
DATA   ,10,11,12,13,13,12,11,10,
DATA 10,10,11,12,13,13,12,11,10,
DATA 11,11,11,12,13,13,12,11,10,
DATA 12,12,12,12,13,13,12,11,10,
DATA 13,13,13,13,13,13,12,11,10,
DATA 13,13,13,13,13,13,12,11,10,
DATA 12,12,12,12,12,12,12,11,10,
DATA 11,10,11,11,11,11,11,11,10,
DATA 10,10,10,10,10,10,10,10,10,
DATA   ,  ,  ,  ,  ,  ,  ,  ,  ,
'-I
DATA   ,  ,  ,  ,  ,  ,  ,  ,  ,
DATA 10,10,10,10,10,10,10,10,10,
DATA 11,11,11,11,11,11,11,11,10,
DATA 12,12,12,12,12,12,12,11,10,
DATA 13,13,13,13,13,13,12,11,10,
DATA 13,13,13,13,13,13,12,11,10,
DATA 12,12,12,12,13,13,12,11,10,
DATA 11,11,11,12,13,13,12,11,10,
DATA 10,10,11,12,13,13,12,11,10,
DATA   ,10,11,12,13,13,12,11,10,
'- & - & I & I
DATA   ,10,11,12,13,13,12,11,10,
DATA 10,10,11,12,13,13,12,11,10,10
DATA 11,11,11,12,13,13,12,11,11,11
DATA 12,12,12,12,13,13,12,12,12,12
DATA 13,13,13,13,13,13,13,13,13,13
DATA 13,13,13,13,13,13,13,13,13,13
DATA 12,12,12,12,13,13,12,12,12,12
DATA 11,11,11,12,13,13,12,11,11,11
DATA 10,10,11,12,13,13,12,11,10,10
DATA   ,10,11,12,13,13,12,11,10,
'< & > & ^ & v
DATA   ,  ,  ,  ,  ,  ,  ,  ,  ,
DATA   ,10,10,10,10,10,10,10,10,
DATA   ,10,11,11,11,11,11,11,10,
DATA   ,10,11,12,12,12,12,11,10,
DATA   ,10,11,12,13,13,12,11,10,
DATA   ,10,11,12,13,13,12,11,10,
DATA   ,10,11,12,12,12,12,11,10,
DATA   ,10,11,11,11,11,11,11,10,
DATA   ,10,10,10,10,10,10,10,10,
DATA   ,  ,  ,  ,  ,  ,  ,  ,  ,
'I--
DATA   ,  ,  ,  ,  ,  ,  ,  ,  ,
DATA 10,10,10,10,10,10,10,10,10,10
DATA 11,11,11,11,11,11,11,11,11,11
DATA 12,12,12,12,12,12,12,12,12,12
DATA 13,13,13,13,13,13,13,13,13,13
DATA 13,13,13,13,13,13,13,13,13,13
DATA 12,12,12,12,13,13,12,12,12,12
DATA 11,11,11,12,13,13,12,11,11,11
DATA 10,10,11,12,13,13,12,11,10,10
DATA   ,10,11,12,13,13,12,11,10,
'--I
DATA   ,10,11,12,13,13,12,11,10,
DATA 10,10,11,12,13,13,12,11,10,10
DATA 11,11,11,12,13,13,12,11,11,11
DATA 12,12,12,12,13,13,12,12,12,12
DATA 13,13,13,13,13,13,13,13,13,13
DATA 13,13,13,13,13,13,13,13,13,13
DATA 12,12,12,12,12,12,12,12,12,12
DATA 11,11,11,11,11,11,11,11,11,11
DATA 10,10,10,10,10,10,10,10,10,10
DATA   ,  ,  ,  ,  ,  ,  ,  ,  ,
'ioi
DATA   ,10,11,12,13,13,12,11,10,
DATA   ,10,11,12,13,13,12,11,10,10
DATA   ,10,11,12,13,13,12,11,11,11
DATA   ,10,11,12,13,13,12,12,12,12
DATA   ,10,11,12,13,13,13,13,13,13
DATA   ,10,11,12,13,13,13,13,13,13
DATA   ,10,11,12,13,13,12,12,12,12
DATA   ,10,11,12,13,13,12,11,11,11
DATA   ,10,11,12,13,13,12,11,10,10
DATA   ,10,11,12,13,13,12,11,10,
'ioi - killer tofu
DATA   ,10,11,12,13,13,12,11,10,
DATA 10,10,11,12,13,13,12,11,10,
DATA 11,11,11,12,13,13,12,11,10,
DATA 12,12,12,12,13,13,12,11,10,
DATA 13,13,13,13,13,13,12,11,10,
DATA 13,13,13,13,13,13,12,11,10,
DATA 12,12,12,12,13,13,12,11,10,
DATA 11,11,11,12,13,13,12,11,10,
DATA 10,10,11,12,13,13,12,11,10,
DATA   ,10,11,12,13,13,12,11,10,
'Huge Bonus
DATA   ,12,12,12,12,12,12,12,12,
DATA 12,10,10,10,10,10,10,10,10,12
DATA 12,10,10, 9, 9, 9,10,10,10,12
DATA 12,10,10, 9,10,10, 9,10,10,12
DATA 12,10,10, 9, 9, 9,10,10,10,12
DATA 12,10,10, 9,10,10, 9,10,10,12
DATA 12,10,10, 9,10,10, 9,10,10,12
DATA 12,10,10, 9, 9, 9,10,10,10,12
DATA 12,10,10,10,10,10,10,10,10,12
DATA   ,12,12,12,12,12,12,12,12,

LEVEL1:
DATA 63, 39

DATA 19,13,13,13,13,13,13,13,13,13,25,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,25 ,13,13,13,13,13,13,13,25,13,13,13,25,13,13,13,25,13,13,13,25,13,13,13,25,13,13,13,13,13,13,22
DATA 16,1 ,11,11,11,11,11,11,11,11,16,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,16 ,29, 9,11,11,11,11,11,18,11,11,11,18,11,11,11,18,11,11,11,18,11,11,11,18,11,11,11,11,11,10,16
DATA 27,13,13,13,15,11,19,13,13,13,21,11,14,13,15,11,19,13,22,11,19,13,22,11,19,13,13,13,25,15,11,27 ,15,11,24,11,17,11,11,11,11,17,11,11,11,17,11,11,11,17,11,11,11,17,11,11,11,19,15,11,24,11,16
DATA 16,11,11,11,11,11,18,11,11,11,11,11,11,11,11,11,16,29,16,11,16,12,16,11,16,11,11,11,18,11,11,16 ,12,11,11,11,16,11,19,13,13,26,13,13,13,26,13,13,13,26,13,13,13,26,13,22,11,16,12,11,11,11,16
DATA 16,11,19,13,22,11,11,11,19,13,13,13,13,13,15,11,16,11,16,11,16,11,16,11,16,29,17,11,11,11,11,16 ,11,24,11,14,28,11,16,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,16,11,16,11,24,11,14,28
DATA 16,11,16,12,20,13,13,13,21,11,11,11,11,11,11,11,16,11,16,11,16,11,16,11,20,25,26,13,13,22,11,16 ,11,11,11,12,16,11,16,11,19,13,13,13,13,15,11,11,14,13,13,13,13,22,11,16,11,16,11,11,11,12,16
DATA 16,11,18,11,11,11,11,11,11,11,17,11,19,13,13,13,28,11,16,29,16,11,16,11,11,16,11,11,11,16,11,27 ,15,11,24,11,16,11,16,11,16,11,11,11,11,11,11,11,11,11,11,11,11,16,11,16,11,27,15,11,24,11,16
DATA 16,11,11,11,19,13,13,13,13,13,28,11,16,11,11,11,18,11,20,13,21,11,20,22,11,18,11,17,11,18,11,16 ,12,11,11,11,16,11,16,11,16,11,19,13,25,13,13,13,13,13,13,22,11,16,11,16,11,16,12,11,11,11,16
DATA 16,11,19,13,21,11,11,11,11,11,16,11,27,13,22,11,11,11,11,11,11,11,11,16,11,11,11,16,11,11,11,18 ,11,24,11,14,28,11,18,11,16,11,18,11,16,12,11,11,11,11,11,16,11,16,11,18,11,16,11,24,11,14,28
DATA 16,11,16,11,11,11,19,13,15,11,16,11,16,12,16,11,19,13,13,13,13,22,11,20,25,13,13,23,13,15,11,11 ,11,11,11,12,16,11,11,11,16,11,11,11,27,15,11,11,11,17,11,18,11,16,11,11,11,16,11,11,11,12,16
DATA 16,11,16,11,19,13,21,11,11,11,16,11,18,11,16,11,16,29,11,11,11,16,11,11,18,11,11,16,11,11,11,19 ,15,11,24,11,16,11,11,11,16,11,17,11,18,11,11,11,14,28,11,11,11,16,11,11,11,27,15,11,24,11,16
DATA 16,11,16,11,16,11,11,11,17,11,16,11,11,11,16,11,20,13,13,22,11,20,22,11,11,11,14,28,11,14,13,28 ,12,11,11,11,16,11,17,11,16,11,16,11,11,11,11,11,12,16,11,17,11,16,11,17,11,16,12,11,11,11,16
DATA 16,11,16,29,16,11,19,13,21,11,27,15,11,14,28,11,11,11,11,16,11,11,20,13,22,11,11,16,11,11,11,18 ,11,24,11,14,28,11,16,11,16,11,20,13,13,13,13,13,13,26,13,21,11,16,11,16,11,16,11,24,11,14,28
DATA 16,11,20,13,21,11,16,11,11,11,16,11,11,11,20,13,13,15,11,20,22,11,11,11,20,22,11,27,13,15,11,11 ,11,11,11,12,16,11,16,11,16,11,11,11,11,11,11,11,11,11,11,11,11,16,11,16,11,16,11,11,11,12,16
DATA 16,11,11,11,11,11,16,11,19,13,21,11,17,11,11,11,11,11,11,11,16,11,17,11,11,16,11,16,11,11,11,19 ,15,11,24,11,16,11,16,11,20,13,13,13,13,15,11,11,14,13,13,13,13,21,11,16,11,27,15,11,24,11,16
DATA 27,13,15,11,14,13,21,11,16,11,11,11,16,11,19,13,13,13,15,11,16,11,27,15,11,16,11,16,11,14,13,28 ,12,11,11,11,16,11,16,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,16,11,16,12,11,11,11,16
DATA 16,11,11,11,11,11,11,11,16,11,17,11,16,29,16,11,11,11,11,11,16,11,16,11,11,16,12,16,11,11,11,16 ,11,24,11,14,28,11,27,13,13,13,25,13,13,13,25,13,13,13,25,13,13,13,25,21,11,16,11,24,11,14,28
DATA 16,11,14,13,13,13,13,13,21,11,16,11,20,13,21,11,24,11,17,11,18,11,16,11,14,26,13,26,13,15,11,16 ,11,11,11,12,18,11,18,11,11,11,18,11,11,11,18,11,11,11,18,11,11,11,18,11,11,18,11,11, 9,12,16
DATA 16,9 ,11,12,11,11,11,11,11,11,16,11,11,11,11,11,11,11,16,11,11,11,16,11,11,11,11,11,11,11,11,16 ,10,11,11,11,11,11,11,11,17,11,11,11,17,11,11,11,17,11,11,11,17,11,11,11,11,11,11,11,11,29,16
DATA 27,13,13,13,13,13,13,13,15,11,20,13,13,13,22,11,11,19,26,13,13,13,26,13,13,13,13,13,13,13,13,23 ,13,13,13,13,13,13,13,13,21,11,19,13,26,13,13,13,23,15,11,14,26,13,13,13,13,13,13,13,15,11,16

DATA 16,11,11,11,11,11,11,11,11,11,11,11,11,10,16,11,11,16,11,11,11,11,11,11,11,11,11,11,11,11,10,16 ,11,11,11,11,11,11,11,11,11,11,18,11,11,11,11,11,16,29,10,12,11,12,11,12,11,12,11,12,11,11,16
DATA 16,11,19,13,13,13,15,11,14,13,13,13,22,11,16,11,11,16,11,19,13,13,13,15,11,14,13,13,13,22,11,16 ,11,14,22,11,17,11,19,13,22,11,11,11,19,13,15,11,20,13,13,25,13,13,13,13,13,13,13,13,22,11,16
DATA 16,11,16,11,11,11,11,11,11,11,11,11,16,11,16,11,11,16,11,16,11,11,11,11,11,11,11,11,11,16,11,16 ,11,11,18,11,18,11,16,12,20,13,22,12,16,12,11,11,11,11,11,16,11,11,11,11,11,11,11,11,16,11,16
DATA 16,11,16,11,19,13,13,13,13,13,22,11,16,11,16,11,11,16,11,16,11,19,13,13,13,13,13,22,11,16,11,16 ,11,11,11,11,11,11,16,11,11,11,27,13,26,13,13,13,13,22,11,16,11,14,13,13,13,13,22,11,16,11,16
DATA 16,11,16,11,16,11,11,11,11,11,16,11,16,11,16,11,11,16,11,16,11,16,11,11,11,11,11,16,11,16,11,18 ,11,19,13,13,15,11,20,13,22,11,16,11,11,11,11,11,11,16,11,16,11,11,11,11,12,11,16,11,16,11,16
DATA 16,11,16,11,16,11,17,12,17,11,16,11,16,11,16,11,11,16,11,16,11,16,11,17,12,17,11,16,11,16,11,11 ,11,16,11,11,11,11,11,11,16,11,16,11,19,13,13,22,11,16,11,27,15,12,24,12,17,11,16,11,16,11,16
DATA 16,11,16,11,16,11,16,12,16,11,16,11,16,11,16,11,11,16,11,16,11,16,11,16,12,16,11,16,11,16,11,17 ,11,16,11,19,13,13,22,11,16,11,16,11,16,12,11,16,8 ,16,11,16,11,11,11,11,16,11,16,11,16,11,16
DATA 16,11,16,11,16,11,16,12,16,11,18,11,16,11,18,11,11,16,11,16,11,16,11,16,12,16,11,18,11,16,11,16 ,11,16,11,16,12,29,16,11,16,11,16,11,16,12,11,20,25,21,11,16,12,24,12,14,28,11,16,11,16,11,16
DATA 16,11,16,11,18,11,16,29,16,11,11,11,16,11,11,11,11,18,11,16,11,18,11,16,12,16,11,11,11,16,11,16 ,11,16,11,20,15,11,16,12,16,11,18,11,20,15,11,11,16,11,11,16,11,11,11,11,16,11,16,11,16,11,16
DATA 16,11,16,11,11,11,16,12,16,11,17,11,16,11,17,11,11,11,11,16,11,11,11,16,29,16,11,17,11,16,11,16 ,11,16,11,11,11,11,16,12,16,11,11,11,11,11,11,11,16,11,19,26,15,12,24,12,16,11,16,11,16,11,16
DATA 16,11,16,11,17,11,16,12,16,11,16,11,16,11,16,11,11,17,11,16,11,17,11,16,12,16,11,16,11,16,11,18 ,11,20,15,11,14,13,28,29,16,11,19,13,13,13,22,11,16,11,16,12,11,11,11,11,16,11,16,11,16,11,16
DATA 16,11,16,11,16,11,16,12,16,11,16,11,16,11,16,11,11,16,11,16,11,16,11,16,12,16,11,16,11,16,11,11 ,11,11,11,11,11,11,20,13,21,11,18,11,11,11,16,11,16,11,27,15,12,24,12,14,28,11,16,11,16,11,16
DATA 16,11,16,11,16,11,18,12,18,11,16,11,16,11,16,11,11,16,11,16,11,16,11,18,12,18,11,16,11,16,11,19 ,13,13,25,13,22,11,10,11,11,11,11,11,17,11,16,11,16,11,16,11,11,9 ,11,11,16,11,16,11,16,11,16
DATA 16,11,16,11,16,11,11,11,11,11,16,11,16,11,16,11,11,16,11,16,11,16,11,11,11,11,11,16,11,16,11,16 ,12,11,18,11,27,13,13,13,25,13,13,13,28,11,16,11,16,11,16,12,17,29,17,29,16,11,16,11,16,11,16
DATA 16,11,16,11,20,13,13,13,13,13,21,11,16,11,16,11,11,16,11,16,11,20,13,13,13,13,13,21,11,16,11,16 ,11,11,11,11,18,11,11,11,18,11,11,11,18,11,18,11,16,11,20,13,26,13,26,13,21,11,16,11,18,11,16
DATA 16,11,16,11,11,11,11,11,11,11,11,11,16,11,16,11,11,16,11,16,11,11,11,11,11,11,11,11,11,16,11,16 ,11,11,24,11,11,11,24,11,11,11,24,11,11,11,11,11,16,11,11,11,11,11,11,11,11,11,16,11,11,11,16
DATA 16,11,20,13,13,13,15,11,14,13,13,13,21,11,16,11,11,16,11,20,13,13,13,15,11,14,13,13,13,21,11,20 ,15,11,11,11,24,11,11,11,24,11,11,11,24,11,17,11,20,13,13,13,13,13,13,13,13,13,26,13,15,11,16
DATA 16,9 ,11,11,11,11,11,11,11,11,11,11,11,11,16,29,11,16,9 ,11,11,11,11,11,11,11,11,11,11,11,11,   ,12,11,17,11,11,11,17,11,11,11,17,11,11,11,16,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,16
DATA 20,13,13,13,13,13,13,13,13,13,13,13,13,13,26,13,13,26,13,13,13,13,13,13,13,13,13,13,13,13,13,13 ,13,13,26,13,13,13,26,13,13,13,26,13,13,13,26,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,21

BONUS.LEVEL:
DATA 32,20
DATA 19,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,22
DATA 16,1 ,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,16
DATA 16,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,16
DATA 16,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,16
DATA 16,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,16
DATA 16,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,16
DATA 16,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,16
DATA 16,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,16
DATA 16,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,16
DATA 16,11,12,11,12,11,12,11,12,11,12,11,12,11,12,11,12,11,12,11,12,11,12,11,12,11,12,11,12,11,12,16
DATA 16,12,11,12,11,12,11,12,11,12,11,12,11,12,11,12,11,12,11,12,11,12,11,12,11,12,11,12,11,12,11,16
DATA 16,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,16
DATA 16,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,16
DATA 16,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,16
DATA 16,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,16
DATA 16,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,16
DATA 16,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,16
DATA 16,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,16
DATA 16,9 ,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,6 ,16
DATA 20,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,21
MIDDLE.BOX:
DATA 32, 20
DATA   ,  ,  ,  ,  ,  ,  ,11,16,11,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,11,16,11,  ,  ,  ,  ,  ,  ,  ,
DATA   ,  ,  ,  ,  ,  ,  ,11,16,11,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,11,16,11,  ,  ,  ,  ,  ,  ,  ,
DATA   ,  ,  ,  ,  ,  ,  ,11,16,11,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,11,16,11,  ,  ,  ,  ,  ,  ,  ,
DATA   ,  ,  ,  ,  ,  ,  ,11,16,11,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,11,16,11,  ,  ,  ,  ,  ,  ,  ,
DATA   ,  ,  ,  ,  ,  ,  ,12,16,12,11,11,11,11,11,11,11,11,11,11,11,12,16,12,  ,  ,  ,  ,  ,  ,  ,
DATA 13,13,13,13,13,13,13,13,23,13,13,13,13,13,13,13,13,13,13,13,13,13,23,13,13,13,13,13,13,13,13,13
DATA 11,11,11,11,11,11,11,12,16,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,16,12,11,11,11,11,11,11,11,11
DATA   ,  ,  ,  ,  ,  ,  ,11,16,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,16,11,  ,  ,  ,  ,  ,  ,  ,
DATA   ,  ,  ,  ,  ,  ,  ,11,16,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,16,11,  ,  ,  ,  ,  ,  ,  ,
DATA   ,  ,  ,  ,  ,  ,  ,11,16,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,16,11,  ,  ,  ,  ,  ,  ,  ,
DATA   ,  ,  ,  ,  ,  ,  ,11,16,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,16,11,  ,  ,  ,  ,  ,  ,  ,
DATA   ,  ,  ,  ,  ,  ,  ,11,16,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,16,11,  ,  ,  ,  ,  ,  ,  ,
DATA   ,  ,  ,  ,  ,  ,  ,11,16,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,16,11,  ,  ,  ,  ,  ,  ,  ,
DATA 11,11,11,11,11,11,11,12,16,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,16,12,11,11,11,11,11,11,11,11
DATA 13,13,13,13,13,13,13,13,23,13,13,13,13,13,13,13,13,13,13,13,13,13,23,13,13,13,13,13,13,13,13,13
DATA 11,11,11,11,11,11,11,12,16,12,11,11,11,11,11,11,11,11,11,11,11,12,16,12,11,11,11,11,11,11,11,11
DATA   ,  ,  ,  ,  ,  ,  ,11,16,11,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,11,16,11,  ,  ,  ,  ,  ,  ,  ,
DATA   ,  ,  ,  ,  ,  ,  ,11,16,11,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,11,16,11,  ,  ,  ,  ,  ,  ,  ,
DATA   ,  ,  ,  ,  ,  ,  ,11,16,11,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,11,16,11,  ,  ,  ,  ,  ,  ,  ,
DATA   ,  ,  ,  ,  ,  ,  ,11,16,11,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,11,16,11,  ,  ,  ,  ,  ,  ,  ,
TITLE.SCREEN:
DATA 32, 20
DATA   ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,
DATA   ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,
DATA   ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,
DATA   ,  ,  ,19,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,22,  ,  ,  ,
DATA   ,  ,  ,16,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,16,  ,  ,  ,
DATA   ,  ,  ,16,11,19,13,13,15,11,11,11,19,13,22,11,11,11,17,11,11,11,19,13,13,15,11,16,  ,  ,  ,
DATA   ,  ,  ,16,11,16,1 ,11,11,11,11,11,16,9 ,16,11,11,11,16,11,11,11,16,11,11,11,11,16,  ,  ,  ,
DATA   ,  ,  ,16,11,27,13,13,15,11,11,11,27,13,21,11,11,11,16,11,11,11,16,11,11,11,11,16,  ,  ,  ,
DATA   ,  ,  ,16,11,16,5 ,11,11,11,11,11,16,11,11,11,11,11,16,11,11,11,16,11,11,11,11,16,  ,  ,  ,
DATA   ,  ,  ,16,11,20,13,13,15,11,11,11,18,11,11,11,11,11,18,11,11,11,20,13,13,15,11,16,  ,  ,  ,
DATA   ,  ,  ,16,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,16,  ,  ,  ,
DATA   ,  ,  ,20,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,22,11,19,13,13,13,21,  ,  ,  ,
DATA   ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,16,11,16,  ,  ,  ,  ,  ,  ,  ,
DATA   ,  ,  ,19,13,13,13,13,13,13,13,13,13,13,13,13,13,13,22,  ,  ,16,11,16,  ,  ,  ,  ,  ,  ,  ,
DATA   ,  ,  ,16,12,11,11,11,11,11,11,11,11,11,11,11,11,12,16,  ,  ,16,11,16,  ,  ,  ,  ,  ,  ,  ,
DATA   ,  ,  ,16,11,  ,  ,10,  ,10,  ,  ,  ,  ,  ,  ,  ,11,20,13,13,21,11,16,  ,  ,  ,  ,  ,  ,  ,
DATA   ,  ,  ,16,11,  ,  ,  ,  ,  ,  ,  ,9 ,9 ,  ,  ,  ,11,11,11,11,11,11,16,  ,  ,  ,  ,  ,  ,  ,
DATA   ,  ,  ,16,12,11,11,11,11,11,11,11,11,11,11,11,11,12,19,13,13,13,13,21,  ,  ,  ,  ,  ,  ,  ,
DATA   ,  ,  ,20,13,13,13,13,13,13,13,13,13,13,13,13,13,13,21,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,
DATA   ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,

'blank row
DATA   ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,

HANDLER:
BEEP: TBOX "An error has occured!!"
RESUME PLAY.GAME

SUB BOX (ROW1, COL1, ROW2, COL2) STATIC
  
X = 320 / 40: Y = 200 / 25

S = 5

LINE ((X * COL1) - S, (Y * ROW1) - S)-((X * COL2) - S, (Y * ROW2) - S), 0, BF
LINE ((X * COL1) - S, (Y * ROW1) - S)-((X * COL2) - S, (Y * ROW2) - S), , B
END SUB

SUB DISPLAY.GRAPHIC (X, Y, GRAPHIC)
SELECT CASE GRAPHIC
CASE 1: PUT ((X - 1) * 10, (Y - 1) * 10), OBJECT1, PSET
CASE 2: PUT ((X - 1) * 10, (Y - 1) * 10), OBJECT2, PSET
CASE 3: PUT ((X - 1) * 10, (Y - 1) * 10), OBJECT3, PSET
CASE 4: PUT ((X - 1) * 10, (Y - 1) * 10), OBJECT4, PSET
CASE 5: PUT ((X - 1) * 10, (Y - 1) * 10), OBJECT5, PSET
CASE 6: PUT ((X - 1) * 10, (Y - 1) * 10), OBJECT6, PSET
CASE 7: PUT ((X - 1) * 10, (Y - 1) * 10), OBJECT7, PSET
CASE 8: PUT ((X - 1) * 10, (Y - 1) * 10), OBJECT8, PSET
CASE 9: PUT ((X - 1) * 10, (Y - 1) * 10), OBJECT9, PSET
CASE 10: PUT ((X - 1) * 10, (Y - 1) * 10), OBJECT10, PSET
CASE 11: PUT ((X - 1) * 10, (Y - 1) * 10), OBJECT11, PSET
CASE 12: PUT ((X - 1) * 10, (Y - 1) * 10), OBJECT12, PSET
CASE 13: PUT ((X - 1) * 10, (Y - 1) * 10), OBJECT13, PSET
CASE 14: PUT ((X - 1) * 10, (Y - 1) * 10), OBJECT14, PSET
CASE 15: PUT ((X - 1) * 10, (Y - 1) * 10), OBJECT15, PSET
CASE 16: PUT ((X - 1) * 10, (Y - 1) * 10), OBJECT16, PSET
CASE 17: PUT ((X - 1) * 10, (Y - 1) * 10), OBJECT17, PSET
CASE 18: PUT ((X - 1) * 10, (Y - 1) * 10), OBJECT18, PSET
CASE 19: PUT ((X - 1) * 10, (Y - 1) * 10), OBJECT19, PSET
CASE 20: PUT ((X - 1) * 10, (Y - 1) * 10), OBJECT20, PSET
CASE 21: PUT ((X - 1) * 10, (Y - 1) * 10), OBJECT21, PSET
CASE 22: PUT ((X - 1) * 10, (Y - 1) * 10), OBJECT22, PSET
CASE 23: PUT ((X - 1) * 10, (Y - 1) * 10), OBJECT23, PSET
CASE 24: PUT ((X - 1) * 10, (Y - 1) * 10), OBJECT24, PSET
CASE 25: PUT ((X - 1) * 10, (Y - 1) * 10), OBJECT25, PSET
CASE 26: PUT ((X - 1) * 10, (Y - 1) * 10), OBJECT26, PSET
CASE 27: PUT ((X - 1) * 10, (Y - 1) * 10), OBJECT27, PSET
CASE 28: PUT ((X - 1) * 10, (Y - 1) * 10), OBJECT28, PSET
CASE -1, 29: PUT ((X - 1) * 10, (Y - 1) * 10), OBJECT29, PSET
CASE ELSE: LINE ((X - 1) * 10, (Y - 1) * 10)-(((X - 1) * 10) + 9, ((Y - 1) * 10) + 9), BGROUND, BF  'PUT ((X - 1) * 10, (Y - 1) * 10), OBJECT0
END SELECT
END SUB

FUNCTION EDITOR
MAXIMUM.X = 64: MAXIMUM.Y = 48

GOSUB SHOW.EDIT

EDIT.X = 1: EDIT.Y = 1
EDIT.ITEM = 13
DO
IF EDIT.ITEM > OBJECTS THEN EDIT.ITEM = 1
IF EDIT.X > MAXIMUM.X THEN EDIT.X = 1
IF EDIT.Y > MAXIMUM.Y THEN EDIT.Y = 1
IF EDIT.X < 1 THEN EDIT.X = MAXIMUM.X
IF EDIT.Y < 1 THEN EDIT.Y = MAXIMUM.Y
DISPLAY.GRAPHIC EDIT.X, EDIT.Y, EDIT.ITEM
LINE ((EDIT.X - 1) * 10, (EDIT.Y - 1) * 10)-(((EDIT.X) * 10) - 1, ((EDIT.Y) * 10) - 1), 12, B

DO
KP = UCASE$(INKEY$)
LOOP WHILE KP = ""

DISPLAY.GRAPHIC EDIT.X, EDIT.Y, EDIT.LEVEL(EDIT.X, EDIT.Y)

SELECT CASE KP
CASE CHR$(27): EXIT FUNCTION
CASE CHR$(0) + "H": EDIT.Y = EDIT.Y - 1
CASE CHR$(0) + "P": EDIT.Y = EDIT.Y + 1
CASE CHR$(0) + "K": EDIT.X = EDIT.X - 1
CASE CHR$(0) + "M": EDIT.X = EDIT.X + 1
CASE CHR$(0) + CHR$(71): EDIT.X = 1
CASE CHR$(0) + CHR$(79): EDIT.X = MAXIMUM.X
CASE CHR$(0) + CHR$(73): EDIT.Y = 1
CASE CHR$(0) + CHR$(81): EDIT.Y = MAXIMUM.Y
CASE CHR$(0) + CHR$(83), CHR$(8): EDIT.LEVEL(EDIT.X, EDIT.Y) = 0
CASE " ": EDIT.ITEM = EDIT.ITEM + 1
CASE CHR$(13): EDIT.LEVEL(EDIT.X, EDIT.Y) = EDIT.ITEM
CASE "N"
FOR X = 1 TO MAXIMUM.X
FOR Y = 1 TO MAXIMUM.Y
EDIT.LEVEL(X, Y) = 0
NEXT Y
NEXT X
GOSUB SHOW.EDIT
CASE "D"
FOR X = 1 TO MAXIMUM.X
FOR Y = 1 TO MAXIMUM.Y
IF EDIT.LEVEL(X, Y) = 0 THEN EDIT.LEVEL(X, Y) = 11
NEXT Y
NEXT X
GOSUB SHOW.EDIT
CASE "F": GOSUB SHOW.EDIT
CASE "L"

ON ERROR GOTO HANDLER
WORD "Name Of Level: ", F$

F = FREEFILE

OPEN F$ FOR INPUT AS #F
FOR Y = 1 TO MAXIMUM.Y
FOR X = 1 TO MAXIMUM.X
INPUT #F, EDIT.LEVEL(X, Y)
NEXT X
NEXT Y
CLOSE #F
GOSUB SHOW.EDIT
TBOX "Load was successful"
GOSUB SHOW.EDIT

CASE "S"

ON ERROR GOTO HANDLER
WORD "Save As: ", F$

F = FREEFILE

OPEN F$ FOR OUTPUT AS #F
FOR Y = 1 TO MAXIMUM.Y
FOR X = 1 TO MAXIMUM.X
PRINT #F, EDIT.LEVEL(X, Y);
NEXT X
PRINT #F, ""
NEXT Y
CLOSE #F
GOSUB SHOW.EDIT
TBOX "Save was successful"
GOSUB SHOW.EDIT
CASE "P"
I1 = 0
I2 = 0
I3 = 0
I4 = 0
FOR X = 1 TO MAXIMUM.X
FOR Y = 1 TO MAXIMUM.Y
SELECT CASE EDIT.LEVEL(X, Y)
CASE 1 TO 4
I1 = 1
CASE 5 TO 8
I2 = 1
CASE 11: I3 = 1
CASE 29: I4 = I4 + 1
END SELECT
NEXT Y
NEXT X

IF I1 = 0 THEN
TBOX "There is no player 1 start!"
GOSUB SHOW.EDIT
ELSEIF I2 = 0 THEN
TBOX "There is no player 2 start!"
GOSUB SHOW.EDIT
ELSEIF I3 = 0 THEN
TBOX "There aren't any white dots!"
GOSUB SHOW.EDIT
ELSEIF I4 = 1 THEN
TBOX "You can't just have one teleport!"
GOSUB SHOW.EDIT
ELSE
EDITOR = 1
EXIT FUNCTION
END IF
END SELECT
LOOP

SHOW.EDIT:
FOR X = 1 TO MAXIMUM.X
FOR Y = 1 TO MAXIMUM.Y
SELECT CASE TYPE$(EDIT.LEVEL(X, Y))
CASE "O"
W$ = TYPE$(EDIT.LEVEL(X, Y - 1)) + TYPE$(EDIT.LEVEL(X, Y + 1)) + TYPE$(EDIT.LEVEL(X - 1, Y)) + TYPE$(EDIT.LEVEL(X + 1, Y))
SELECT CASE W$
CASE "  OO": EDIT.LEVEL(X, Y) = 13
CASE "   O": EDIT.LEVEL(X, Y) = 14
CASE "  O ": EDIT.LEVEL(X, Y) = 15
CASE "OO  ": EDIT.LEVEL(X, Y) = 16
CASE " O  ": EDIT.LEVEL(X, Y) = 17
CASE "O   ": EDIT.LEVEL(X, Y) = 18
CASE " O O": EDIT.LEVEL(X, Y) = 19
CASE "O  O": EDIT.LEVEL(X, Y) = 20
CASE "O O ": EDIT.LEVEL(X, Y) = 21
CASE " OO ": EDIT.LEVEL(X, Y) = 22
CASE "OOOO": EDIT.LEVEL(X, Y) = 23
CASE "    ": EDIT.LEVEL(X, Y) = 24
CASE " OOO": EDIT.LEVEL(X, Y) = 25
CASE "O OO": EDIT.LEVEL(X, Y) = 26
CASE "OO O": EDIT.LEVEL(X, Y) = 27
CASE "OOO ": EDIT.LEVEL(X, Y) = 28
END SELECT
END SELECT
DISPLAY.GRAPHIC X, Y, EDIT.LEVEL(X, Y)
NEXT Y
NEXT X
RETURN
END FUNCTION

SUB GETOBJECT (OBJECT(), XO, YO)

FOR Y = 1 TO YO
FOR X = 1 TO XO
READ Col
IF Col = 0 THEN Col = BGROUND
PSET (X, Y), Col
NEXT X
NEXT Y

GET (1, 1)-(XO, YO), OBJECT
END SUB

SUB MIDDLE (row, TEXT$)
  MaxCol = 40
  Col = MaxCol \ 2
  LOCATE row, Col - (LEN(TEXT$) / 2 + .5)
  PRINTF TEXT$
END SUB

SUB MILLIDELAY (msecs) STATIC
IF sysfact& THEN                   'Did we calc- system speed yet?
        IF msecs THEN                  'have to want a delay
            count& = (sysfact& * msecs) \ -54    'calc- # of loops needed
            DO
                count& = count& + 1         'negative - add to get to 0
                IF count& = z THEN EXIT DO  'when its 0 we're done
            LOOP UNTIL t2 = PEEK(&H6C)      'make it the same as loop below
        END IF
    ELSE                               'if sysfact& is 0, calc- system speed
        DEF SEG = &H40                 'point to low memory
        t1 = PEEK(&H6C)                'get tick count
        DO
            t2 = PEEK(&H6C)            'get tick count
        LOOP UNTIL t2 <> t1            'wait 'til its a new tick
        DO
            sysfact& = sysfact& + 1         'count number of loops
            IF sysfact& = z THEN EXIT DO    'make it the same as loop above
        LOOP UNTIL t2 <> PEEK(&H6C)         'keep going 'til its a new tick
        t2 = 256                            'prevent the above UNTIL
    END IF
END SUB

FUNCTION OPERATED
OPERATED = 1
END FUNCTION

SUB PRINTF (S AS STRING)
XSZE = 1: YSZE = 1
SX = (POS(0) - 1) * 8
Y = (CSRLIN - 1) * 8
FOR A = 1 TO LEN(S)
X = SX + ((A - 1) * (XSZE * 8))
XS = X
YS = Y
XM = X + (3 * XSZE)
YM = Y + (3 * YSZE)
XE = X + (6 * XSZE)
YE = Y + (6 * YSZE)
L$ = MID$(S, A, 1)
XST = ((XM - XS) / 2)
YST = ((YM - YS) / 2)
LINE (XS, YS)-(XE, YE), BGROUND, BF
SELECT CASE UCASE$(L$)
CASE "A"
LINE (XS, YE)-(XM, YS)
LINE (XM, YS)-(XE, YE)
LINE (((XM - XS) / 2) + XS, YM)-((((XM - XS) / 2) * 3) + XS, YM)
CASE "B"
LINE (XS, YS)-((XST / 2) * 5 + XS, YS)
LINE (XS, YS)-(XS, YE)
LINE (XE, YE)-(XS, YE)
LINE (XE, YE)-(XE, YM)
LINE (XE, YM)-(XS, YM)
LINE ((XST / 2) * 5 + XS, YS)-((XST / 2) * 5 + XS, YM)
CASE "C"
LINE (XS, YS)-(XE, YS)
LINE (XS, YS)-(XS, YE)
LINE (XS, YE)-(XE, YE)
CASE "D"
LINE (XS, YS)-(XS, YE)
LINE (XS, YS)-(XM, YS)
LINE (XM, YS)-(XE, YM)
LINE (XE, YM)-(XM, YE)
LINE (XM, YE)-(XS, YE)
CASE "E"
LINE (XS, YS)-(XS, YE)
LINE (XS, YS)-(XE, YS)
LINE (XS, YM)-(XE, YM)
LINE (XS, YE)-(XE, YE)
CASE "F"
LINE (XE, YS)-(XS, YS)
LINE (XS, YS)-(XS, YE)
LINE (XS, YM)-(XE, YM)
CASE "G"
LINE (XE, YS)-(XS, YS)
LINE (XS, YE)-(XS, YS)
LINE (XS, YE)-(XE, YE)
LINE (XE, YE)-(XE, YM)
LINE (XE, YM)-(XM, YM)
CASE "H"
LINE (XS, YS)-(XS, YE)
LINE (XE, YE)-(XE, YS)
LINE (XS, YM)-(XE, YM)
CASE "I"
LINE (XM, YS)-(XM, YE)
CASE "J"
LINE (XS, YS)-(XE, YS)
LINE (XM, YS)-(XM, YE)
LINE (XS, YE)-(XM, YE)
CASE "K"
LINE (XS, YS)-(XS, YE)
LINE (XS, YM)-(XE, YS)
LINE (XS, YM)-(XE, YE)
CASE "M"
LINE (XS, YS)-(XS, YE)
LINE (XS, YS)-(XM, YE)
LINE (XM, YE)-(XE, YS)
LINE (XE, YS)-(XE, YE)
CASE "N"
LINE (XS, YS)-(XS, YE)
LINE (XE, YE)-(XE, YS)
LINE (XE, YE)-(XS, YS)
CASE "L"
LINE (XS, YS)-(XS, YE)
LINE (XS, YE)-(XE, YE)
CASE "O"
LINE (XE, YS)-(XE, YE)
LINE (XS, YS)-(XE, YS)
LINE (XS, YS)-(XS, YE)
LINE (XS, YE)-(XE, YE)
CASE "P"
LINE (XS, YS)-(XS, YE)
LINE (XS, YS)-(XE, YS)
LINE (XE, YS)-(XE, YM)
LINE (XS, YM)-(XE, YM)
CASE "Q"
LINE (XS, YS)-(XM + XST, YS)
LINE (XM + XST, YS)-(XM + XST, YM + YST)
LINE (XM + XST, YM + YST)-(XS, YM + YST)
LINE (XS, YM + YST)-(XS, YS)
LINE (XM, YM)-(XE, YE)
CASE "R"
LINE (XS, YS)-(XS, YE)
LINE (XS, YS)-(XE, YS)
LINE (XE, YS)-(XE, YM)
LINE (XS, YM)-(XE, YM)
LINE (XS, YM)-(XE, YE)
CASE "S"
LINE (XS, YS)-(XE, YS)
LINE (XS, YM)-(XS, YS)
LINE (XS, YM)-(XE, YM)
LINE (XE, YE)-(XE, YM)
LINE (XE, YE)-(XS, YE)
CASE "T"
LINE (XM, YS)-(XM, YE)
LINE (XS, YS)-(XE, YS)
CASE "U"
LINE (XS, YS)-(XS, YE)
LINE (XS, YE)-(XE, YE)
LINE (XE, YE)-(XE, YS)
CASE "V"
LINE (XS, YS)-(XM, YE)
LINE (XM, YE)-(XE, YS)
CASE "W"
LINE (XS, YS)-(XS, YE)
LINE (XS, YE)-(XM, YS)
LINE (XM, YS)-(XE, YE)
LINE (XE, YE)-(XE, YS)
CASE "X"
LINE (XE, YE)-(XS, YS)
LINE (XE, YS)-(XS, YE)
CASE "Y"
LINE (XS, YS)-(XM, YM)
LINE (XE, YS)-(XM, YM)
LINE (XM, YM)-(XM, YE)
CASE "Z"
LINE (XS, YS)-(XE, YS)
LINE (XE, YS)-(XS, YE)
LINE (XS, YE)-(XE, YE)
CASE "!"
LINE (XM, YM)-(XM, YS)
PSET (XM, YE)
CASE "1"
LINE (XS, YM)-(XM, YS)
LINE (XM, YS)-(XM, YE)
LINE (XS, YE)-(XE, YE)
CASE "2"
LINE (XS, YS)-(XE, YS)
LINE (XE, YS)-(XE, YM)
LINE (XE, YM)-(XS, YM)
LINE (XS, YM)-(XS, YE)
LINE (XS, YE)-(XE, YE)
CASE "3"
LINE (XS, YS)-(XE, YS)
LINE (XE, YS)-(XE, YE)
LINE (XE, YM)-(XS, YM)
LINE (XS, YE)-(XE, YE)
CASE "4"
LINE (XS, YS)-(XS, YM)
LINE (XE, YM)-(XS, YM)
LINE (XE, YS)-(XE, YE)
CASE "5"
LINE (XS, YS)-(XE, YS)
LINE (XS, YM)-(XS, YS)
LINE (XS, YM)-(XE, YM)
LINE (XE, YE)-(XE, YM)
LINE (XE, YE)-(XS, YE)
CASE "6"
LINE (XS, YS)-(XE, YS)
LINE (XS, YS)-(XS, YE)
LINE (XS, YE)-(XE, YE)
LINE (XE, YE)-(XE, YM)
LINE (XE, YM)-(XS, YM)
CASE "7"
LINE (XS, YS)-(XE, YS)
LINE (XE, YS)-(XE, YE)
CASE "8"
LINE (XS, YM)-(XE, YM)
LINE (XE, YS)-(XE, YE)
LINE (XS, YS)-(XE, YS)
LINE (XS, YS)-(XS, YE)
LINE (XS, YE)-(XE, YE)
CASE "9"
LINE (XS, YS)-(XE, YS)
LINE (XS, YS)-(XS, YM)
LINE (XS, YM)-(XE, YM)
LINE (XE, YS)-(XE, YE)
CASE "0"
LINE (XS, YS)-(XE, YE)
LINE (XE, YS)-(XE, YE)
LINE (XS, YS)-(XE, YS)
LINE (XS, YS)-(XS, YE)
LINE (XS, YE)-(XE, YE)
CASE "'", "`"
LINE (XM, YM - YST)-(XM, YS)
CASE CHR$(34)
LINE (XM + XST, YM - YST)-(XM + XST, YS)
LINE (XM - XST, YM - YST)-(XM - XST, YS)
CASE "-"
LINE (XM - XST, YM)-(XM + XST, YM)
CASE "_"
LINE (XM - XST, YE)-(XM + XST, YE)
CASE ","
LINE (XM, YE - YST)-(XM, YE)
CASE "#"
LINE (XS, YS + YST)-(XE, YS + YST)
LINE (XS, YE - YST)-(XE, YE - YST)
LINE (XS + XST, YS)-(XS + XST, YE)
LINE (XE - XST, YS)-(XE - XST, YE)
CASE "*"
LINE (XS, YS)-(XE, YE)
LINE (XS, YE)-(XE, YS)
LINE (XM, YS)-(XM, YE)
LINE (XS, YM)-(XE, YM)
CASE ">"
LINE (XS, YS)-(XE, YM)
LINE (XS, YE)-(XE, YM)
CASE "<"
LINE (XE, YE)-(XS, YM)
LINE (XE, YS)-(XS, YM)
CASE "("
LINE (XE, YE)-(XM, YM)
LINE (XE, YS)-(XM, YM)
CASE ")"
LINE (XS, YS)-(XM, YM)
LINE (XS, YE)-(XM, YM)
CASE "["
LINE (XE, YS)-(XM, YS)
LINE (XM, YS)-(XM, YE)
LINE (XM, YE)-(XE, YE)
CASE "]"
LINE (XS, YS)-(XM, YS)
LINE (XM, YS)-(XM, YE)
LINE (XM, YE)-(XS, YE)
CASE "{"
LINE (XE, YS)-(XM, YS)
LINE (XM, YS)-(XM, YE)
LINE (XM, YE)-(XE, YE)
LINE (XS, YM)-(XM, YM)
CASE "}"
LINE (XS, YS)-(XM, YS)
LINE (XM, YS)-(XM, YE)
LINE (XM, YE)-(XS, YE)
LINE (XE, YM)-(XM, YM)
CASE "+"
LINE (XS, YM)-(XE, YM)
LINE (XM, YS)-(XM, YE)
CASE "="
LINE (XS, YM - YST)-(XE, YM - YST)
LINE (XS, YM + YST)-(XE, YM + YST)
CASE "^"
LINE (XS, YM)-(XM, YS)
LINE (XE, YM)-(XM, YS)
CASE "&"
LINE (XE, YE)-(XS, YM - YST)
LINE (XS, YM - YST)-(XM, YS)
LINE (XE, YM - YST)-(XM, YS)
LINE (XE, YM - YST)-(XS, YM)
LINE (XS, YM)-(XM, YE)
LINE (XE, YM)-(XM, YE)
CASE "?"
LINE (XS, YM - YST)-(XS, YS)
LINE (XE, YS)-(XS, YS)
LINE (XE, YM - YST)-(XE, YS)
LINE (XE, YM - YST)-(XM, YM)
PSET (XM, YE)
END SELECT
NEXT A
END SUB

SUB RFIELD (Field$, Min%, Max%, Permitted$)

' locate the field on the screen
atRow% = CSRLIN
atCol% = POS(X)

' clear the field on the screen
Field$ = ""
PRINT CHR$(219); SPACE$(Max%);

' set the brake and loop until done
Brake% = 1

WHILE Brake%

' get a keystroke
 X$ = ""
 WHILE LEN(X$) = 0
  X$ = INKEY$
 WEND

' convert to uppercase if specified
 IF INSTR(Permitted$, "C") THEN X$ = UCASE$(X$)
 oldLen% = LEN(Field$)

' test for permitted keystroke
 GOOD% = 0
 IF INSTR(Permitted$, ".") THEN
  IF X$ = "." THEN
   IF INSTR(Field$, ".") = 0 THEN GOOD% = 1
  END IF
 END IF
 IF INSTR(UCASE$(Permitted$), "N") THEN
  IF INSTR("0123456789", X$) THEN GOOD% = 1
 END IF
 IF INSTR(UCASE$(Permitted$), "S") THEN
  IF X$ = " " THEN GOOD% = 1
 END IF
 IF INSTR(UCASE$(Permitted$), "X") THEN
  IF INSTR("ABCDEFGHIJKLMNOPQRSTUVWXYZ", UCASE$(X$)) THEN
   GOOD% = 1
  END IF
 END IF
 IF INSTR(UCASE$(Permitted$), "Y") THEN
  IF INSTR("YyNy", X$) THEN GOOD% = 1
 END IF
 IF GOOD% THEN
  Field$ = Field$ + X$
  IF INSTR(Field$, ".") THEN
   NewMax% = Max% + 1
  ELSE
   NewMax% = Max%
  END IF
  Field$ = MID$(Field$, 1, NewMax%)
 END IF

' handle Bkspace
 IF ASC(X$) = 8 AND LEN(Field$) THEN
  Field$ = MID$(Field$, 1, LEN(Field$) - 1)
 END IF

' calculate significant digits
 Signif$ = Field$ + "X"
 WHILE INSTR(" 0", MID$(Signif$, 1, 1))
  Signif$ = MID$(Signif$, 2)
 WEND
 IF INSTR(Signif$, ".") THEN
  SignifLen% = LEN(Signif$) - 2
 ELSE
  SignifLen% = LEN(Signif$) - 1
 END IF

' handle Enter
 IF ASC(X$) = 13 AND SignifLen% >= Min% THEN
  oldLen% = LEN(Field$) + 1
  Brake% = 0
 END IF

' handle Esc
 IF ASC(X$) = 27 THEN
  LOCATE atRow%, atCol%
  PRINT CHR$(219); SPACE$(Max%);
  Field$ = ""
  IF INSTR(UCASE$(Permitted$), "E") THEN
   RETURN
  END IF
 END IF

' reprint if change, or beep if no change
 IF oldLen% = LEN(Field$) THEN
  BEEP
 ELSE
  LOCATE atRow%, atCol%
  IF INSTR(UCASE$(Permitted$), "P") THEN
   PRINT STRING$(LEN(Field$), 254); CHR$(219); " ";
  ELSE
   PRINT Field$; CHR$(219); " ";
  END IF
 END IF

' check for auto-Enter
 IF INSTR(UCASE$(Permitted$), "A") THEN
  IF SignifLen% = Max% THEN
   Brake% = 0
  END IF
 END IF
WEND

' justify if required
IF INSTR(UCASE$(Permitted$), "J") THEN
 WHILE MID$(Field$, 1, 1) = "0"
  Field$ = MID$(Field$, 2)
 WEND
 Field$ = RIGHT$(SPACE$(NewMax%) + Field$, NewMax%)
END IF

' reprint, deleting the cursor
LOCATE atRow%, atCol%
IF INSTR(UCASE$(Permitted$), "P") THEN
 PRINT STRING$(LEN(Field$), 254); " ";
ELSE
 PRINT Field$; " ";
END IF

END SUB

FUNCTION SORT (PERSON() AS STRING, SCORE(), TPERSON AS STRING, TSCORE, L)
VER = 0
IF TSCORE > SCORE(L, MAXIMUM.SCORES) THEN VER = 1: PERSON(L, MAXIMUM.SCORES) = TPERSON: SCORE(L, MAXIMUM.SCORES) = TSCORE
FOR A = 1 TO MAXIMUM.SCORES - 1
FOR B = A + 1 TO MAXIMUM.SCORES
SCORE1 = SCORE(L, A)
SCORE2 = SCORE(L, B)
IF SCORE1 < SCORE2 THEN SWAP SCORE1, SCORE2: SWAP PERSON(L, A), PERSON(L, B)
SCORE(L, A) = SCORE1
SCORE(L, B) = SCORE2
NEXT B
NEXT A
SORT = VER
END FUNCTION

SUB TBOX (TEXT$)
L = LEN(TEXT$)

  MaxCol = 40
  Col = MaxCol \ 2

C1 = Col - L / 2 + .5: C2 = C1 + L
COLOR 14: BOX 12, C1 - 1, 14, C2 + 1
COLOR 12
 
  LOCATE 13, Col - L / 2 + .5
  PRINTF TEXT$

KP = INPUT$(1)

END SUB

FUNCTION TYPE$ (A)
SELECT CASE A
CASE 13 TO 28: TYPE$ = "O"
CASE ELSE: TYPE$ = " "
END SELECT
END FUNCTION

SUB WORD (PROMPT$, VAR$)
COLOR 14: BOX 12, 1, 14, 40
COLOR 12: LOCATE 13, 2: PRINT PROMPT$; : COLOR 11: LINE INPUT VAR$
END SUB

